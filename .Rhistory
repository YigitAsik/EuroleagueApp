plot.subtitle = element_text(size = 10, hjust=.5, vjust=-1),
legend.position = 'top',
legend.ticks = element_blank(),
legend.justification = 'center',
legend.position.inside = c(.5, .5),
panel.grid.minor = element_blank())
df %>%
ggplot(aes(x = USG., y = TS.))  +
geom_point(aes(fill = MP), shape = 21, size = 4, alpha = .75) +
dark_theme_gray() +
geom_smooth(se = TRUE, color = 'black', linetype = 'dashed') +
scale_fill_viridis_c(direction = -1) +
labs(x = 'Usage Rate',
y = 'True Shooting %',
title = 'Dame\'s Skill Curve',
subtitle = 'Usage and scoring efficiency') +
theme(plot.title.position = 'plot',
plot.title = element_text(face = 'bold', size = 14, hjust=.5, vjust=-1),
plot.subtitle = element_text(size = 10, hjust=.5, vjust=-1),
legend.position = 'top',
legend.ticks = element_blank(),
legend.position.inside = c(.3, .5),
panel.grid.minor = element_blank())
df %>%
ggplot(aes(x = USG., y = TS.))  +
geom_point(aes(fill = MP), shape = 21, size = 4, alpha = .75) +
dark_theme_gray() +
geom_smooth(se = TRUE, color = 'black', linetype = 'dashed') +
scale_fill_viridis_c(direction = -1) +
labs(x = 'Usage Rate',
y = 'True Shooting %',
title = 'Dame\'s Skill Curve',
subtitle = 'Usage and scoring efficiency') +
theme(plot.title.position = 'plot',
plot.title = element_text(face = 'bold', size = 14, hjust=.5, vjust=-1),
plot.subtitle = element_text(size = 10, hjust=.5, vjust=-1),
legend.position = 'top',
legend.ticks = element_blank(),
legend.position.inside = c(.2, .5),
panel.grid.minor = element_blank())
df %>%
ggplot(aes(x = USG., y = TS.))  +
geom_point(aes(fill = MP), shape = 21, size = 4, alpha = .75) +
dark_theme_gray() +
geom_smooth(se = TRUE, color = 'black', linetype = 'dashed') +
scale_fill_viridis_c(direction = -1) +
labs(x = 'Usage Rate',
y = 'True Shooting %',
title = 'Dame\'s Skill Curve',
subtitle = 'Usage and scoring efficiency') +
theme(plot.title.position = 'plot',
plot.title = element_text(face = 'bold', size = 14, hjust=.5, vjust=-1),
plot.subtitle = element_text(size = 10, hjust=.5, vjust=-1),
legend.position = 'top',
legend.ticks = element_blank(),
legend.position.inside = c(-1, -1),
panel.grid.minor = element_blank())
library(tidyverse)
library(rvest)
library(ggdark)
url <- 'https://www.basketball-reference.com/players/l/lillada01/gamelog-advanced/2016/'
df <- url %>%
read_html() %>%
html_table() %>%
as.data.frame()
head(df)
unique(df$MP)
df <- df %>%
filter(
!MP %in% c('Inactive', 'MP')
) %>%
select(
MP, TS., USG.
)
unique(df$MP)
df$TS. <- as.numeric(df$TS.)
df$USG. <- as.numeric(df$USG.)
df$MP <- parse_number(df$MP)
df %>%
ggplot(aes(x = USG., y = TS.))  +
geom_point(aes(fill = MP), shape = 21, size = 4, alpha = .75) +
dark_theme_gray() +
geom_smooth(se = TRUE, color = 'black', linetype = 'dashed') +
scale_fill_viridis_c(direction = -1) +
labs(x = 'Usage Rate',
y = 'True Shooting %',
title = 'Dame\'s Skill Curve',
subtitle = 'Usage and scoring efficiency') +
theme(plot.title.position = 'plot',
plot.title = element_text(face = 'bold', size = 14, hjust=.5, vjust=-1),
plot.subtitle = element_text(size = 10, hjust=.5, vjust=-1),
legend.position = 'top',
legend.ticks = element_blank(),
panel.grid.minor = element_blank())
library(nbastatR)
library(tidyverse)
Sys.setenv('VROOM_CONNECTION_SIZE' = 131072 * 2)
mavs_shots <- teams_shots(teams = 'Dallas Mavericks', season = 2024,
season_types = 'Regular Season')
mavs_shots %>%
head(20)
library(rvest)
library(ggdark)
??rvest
?rvest
??head
?head
library(ggdark)
url <- 'https://www.basketball-reference.com/players/l/lillada01/gamelog-advanced/2016/'
df <- url %>%
read_html() %>%
html_table() %>%
as.data.frame()
head(df)
unique(df$MP)
df <- df %>%
filter(
!MP %in% c('Inactive', 'MP')
) %>%
select(
MP, TS., USG.
)
unique(df$MP)
df$TS. <- as.numeric(df$TS.)
df$USG. <- as.numeric(df$USG.)
df$MP <- parse_number(df$MP)
df %>%
ggplot(aes(x = USG., y = TS.))  +
geom_point(aes(fill = MP), shape = 21, size = 4, alpha = .75) +
dark_theme_gray() +
geom_smooth(se = TRUE, color = 'black', linetype = 'dashed')
df %>%
ggplot(aes(x = USG., y = TS.))  +
geom_point(aes(fill = MP), shape = 21, size = 4, alpha = .75) +
dark_theme_gray() +
geom_smooth(se = TRUE, color = 'black', linetype = 'dashed') +
scale_fill_viridis_c(direction = -1) +
labs(x = 'Usage Rate',
y = 'True Shooting %',
title = 'Dame\'s Skill Curve',
subtitle = 'Usage and scoring efficiency') +
theme(plot.title.position = 'plot',
plot.title = element_text(face = 'bold', size = 14, hjust=.5, vjust=-1),
plot.subtitle = element_text(size = 10, hjust=.5, vjust=-1),
legend.position = 'top',
legend.ticks = element_blank(),
panel.grid.minor = element_blank())
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
output$xPTS_data <- renderDataTable({
tmp <- xPTS_data() %>%
select(
PlayerName, TEAM, Position,
tot_FGA, tot_PTS, tot_xPTS, eFG, xeFG, SM, PTS_Added
)
colnames(tmp) = c('Player Name', 'Team', 'Position', 'FGA', 'Scored PTS',
'Expected PTS', 'eFG%', 'xeFG%', 'PTS Above Expected (Per Shot)',
'PTS Added')
datatable(
tmp,
class = 'display nowrap compact hover', # no wrap
filter = 'top',
rownames = F,
options = list(scrollX = T)
)
})
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
output$xPTS_data <- renderDataTable({
tmp <- xPTS_data() %>%
select(
PlayerName, TEAM, Position,
tot_FGA, tot_PTS, tot_xPTS, eFG, xeFG, SM, PTS_Added
) %>%
arrange(-SM)
colnames(tmp) = c('Player Name', 'Team', 'Position', 'FGA', 'Scored PTS',
'Expected PTS', 'eFG%', 'xeFG%', 'PTS Above Expected (Per Shot)',
'PTS Added')
datatable(
tmp,
class = 'display compact hover', # no wrap
filter = 'bottom',
rownames = F,
options = list(scrollX = T)
)
})
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
tabPanel(
'Data',
fluidRow(
column(
width = 12,
tabsetPanel(
type = 'tabs',
tabPanel(
'xPTS',
hr(),
dataTableOutput('xPTS_data'),
# Nümerik input slider için
tags$style(type = 'text/css', '.noUi-connect {background: #f5971d;}'),
# DT sütun renk ayarı
tags$head(tags$style('#xPTS_data thead th{background-color: #f5971d; color: #231f20;')),
# Satır sütun çizgileri
tags$head(tags$style('#xPTS_data tbody td {border-top: 0.1px solid grey;border-left: 0.1px solid grey;border-right: 0.1px solid grey;}'))
),
tabPanel(
'Hex Plot',
hr(),
radioButtons(inputId = 'against', label = 'Relative to: ',
choices = c('League Avg.', 'Team Avg.', 'Position Avg.'),
selected = 'League Avg.', inline = T),
div(style = 'display: inline-block;width: 150px',
selectInput(inputId = 'player_name', label = 'Interested Player',
choices = NULL)),
div(style = 'display: inline-block; vertical-align:top; width: 150px',
selectInput(inputId = 'with', label = 'On With',
choices = NULL, multiple = T)),
div(style = 'display: inline-block; vertical-align:top; width: 150px',
selectInput(inputId = 'without', label = 'Without',
choices = NULL, multiple = T)),
div(style = 'display: inline-block; width: 100px',
actionButton(inputId = 'plot', 'Plot'))
)
)
)
)
)
# tabPanel("Data",
#
#          fluidRow(
#
#            column(width = 12,
#
#
#                   tabsetPanel(
#
#                     type = "pills",
#
#
#                     tabPanel("Database",
#
#                              hr(),
#
#                              dataTableOutput("player_database"),
#                              # Nümerik input slider için
#                              tags$style(type = "text/css",".noUi-connect {background: #f5971d;}"),
#                              # DT sütun renk ayarı
#                              tags$head(tags$style("#player_database thead th{background-color: #f5971d; color: #231f20;}")),
#                              # Satır Sütun çizgileri
#                              tags$head(tags$style("#player_database tbody td {border-top: 0.1px solid grey;border-left: 0.1px solid grey;border-right: 0.1px solid grey;}"))
#
#
#
#                              ),
#
#
#
#
#
#                     tabPanel("Distance",
#
#                              hr(),
#
#                              dataTableOutput("player_distance"),
#                              # Nümerik input slider için
#                              tags$style(type = "text/css",".noUi-connect {background: #f5971d;}"),
#                              # DT sütun renk ayarı
#                              tags$head(tags$style("#player_distance thead th{background-color: #f5971d; color: #231f20;}")),
#                              # Satır Sütun çizgileri
#                              tags$head(tags$style("#player_distance tbody td {border-top: 0.1px solid grey;border-left: 0.1px solid grey;border-right: 0.1px solid grey;}"))
#
#
#                              )
#
#
#
#                   )
#
#
#
#                   )
#
#
#
#
#
#          )
#
#
#
#
#
#
#
#
#
#          )
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
gc()
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
gc()
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
library(tidyverse)
library(httr)
library(jsonlite)
shots_url <- 'https://live.euroleague.net/api/Points?gamecode=1&seasoncode=E2024&disp=' # update year
res <- GET(url = shots_url)
summary(res)
res$status_code
content_txt <- content(res, as='text', encoding='UTF-8')
str(fromJSON(content_txt)$Rows)
json_content <- fromJSON(content_txt)
initial_df <- as.data.frame(json_content$Rows)
initial_df$Game_Code <- 1
initial_df$Year <- 2024
get_shots_data <- function(year, gamecode) {
tmp_url <- paste0('https://live.euroleague.net/api/Points?gamecode=',
gamecode, '&seasoncode=E', year, '&disp=')
resp <- GET(url = tmp_url)
if (resp$status_code == 200) {
tryCatch(
{
print(paste('Pulling shots:', as.character(gamecode)))
content_txt <- content(resp, as='text', encoding='UTF-8')
json_content <- fromJSON(content_txt)
tmp_df <- as.data.frame(json_content$Rows)
tmp_df$Game_Code <- gamecode
tmp_df$Year <- year
Sys.sleep(1)
return(tmp_df)
},
error = function(cond)
NA
)
} else if (resp$status_code != 200) {
next
}
}
for (i in seq(2, 70)) {
initial_df <- rbind(initial_df, get_shots_data(2024, i)) # update year
}
max(as.integer(initial_df$Game_Code), na.rm = T)
head(initial_df)
tail(initial_df)
dim(initial_df)
dim(initial_df[!is.na(initial_df$Game_Code), ])
str(initial_df)
length(unique(initial_df$Game_Code))
write.csv(initial_df[!is.na(initial_df$Game_Code), ], 'EL_Shots_2024.csv') # update year
?rename
?rename()
library(tidyverse)
setwd('~/Documents/DRIVE/Hooplytics/WEB/DATA')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
gc()
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
gc()
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
gc()
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
gc()
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
gc()
runApp('Documents/DRIVE/Hooplytics/_MAIN_/The Shiny')
shiny::runApp()
